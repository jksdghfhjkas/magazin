from telegram import Update
from telegram.ext import CommandHandler, Application, ContextTypes, MessageHandler, filters
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup

import redis
from os import getenv


redis_client = redis.Redis(host='redis', port=6379, db=3, decode_responses=True)
APPLICATION = None


async def start_messages(update: Update, content: ContextTypes):
    """
    /start 
    –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    """

    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π')
    
    contact_button = KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    keyboard = ReplyKeyboardMarkup([[contact_button]], resize_keyboard=True, one_time_keyboard=True)

    await update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:",
        reply_markup=keyboard
    )



async def handle_contact(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    global redis_client

    """
    —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    """
    if update.message.contact:
        phone_number = update.message.contact.phone_number  
        chat_id = update.effective_chat.id 

            
        if code := authenticate_user(phone_number):

            await update.message.reply_text(
                f"–°–ø–∞—Å–∏–±–æ! –ö–æ–¥ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π: {code}\n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ —É–¥–∞–ª—è–π—Ç–µ —á–∞—Ç –æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–π!"
            )

            # –∑–∞–Ω–æ—Å–∏–º chat_id –≤ redis –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            redis_client.set(phone_number, chat_id, ex=300)

        else:
            await update.message.reply_text(
                f"–í—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –∏–ª–∏ –≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∏—Å—Ç–µ–∫–ª–æ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É! {phone_number}"
            )



async def chat_id_handle_contact(chat_id: str, code: str, application):
    """
    –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ chat_id
    """
    
    message = f"–í–∞—à –∫–æ–¥: {code}\n –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!"

    await application.bot.send_message(chat_id=chat_id, text=message)
    



def authenticate_user(phone: str):
    
    """
    —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ redis

    phone:code / –≤—Ä–µ–º—è 60 —Å–µ–∫—É–Ω–¥
    """
    global redis_client
    code = redis_client.get(phone)

    if not code:
        return False
    
    return code

    
if __name__ == "__main__":
    token = getenv("BOT_TOKEN")
    APPLICATION = Application.builder().token(token).build()

    APPLICATION.add_handler(CommandHandler("start", start_messages))
    APPLICATION.add_handler(MessageHandler(filters.CONTACT, handle_contact))
    APPLICATION.run_polling()

    print("start success...")





